-- Tank Fuel Gauge Display on Monitor
local tankPeripheral = "front"  -- Tank sensor or block
local monitorPeripheral = "right"  -- Monitor is on the right
local updateInterval = 1
local barWidth = 20

-- Wrap peripherals
local tank = peripheral.wrap(tankPeripheral)
local monitor = peripheral.wrap(monitorPeripheral)

-- Safety check
if not monitor then
    error("Monitor not found on side: " .. monitorPeripheral)
end

-- Configure monitor
monitor.setTextScale(1)
monitor.setBackgroundColor(colors.black)
monitor.setTextColor(colors.white)
monitor.clear()

-- Function to draw the fuel bar
local function drawFuelBar(percentage)
    monitor.clear()
    monitor.setCursorPos(1, 1)
    monitor.write("Tank Fuel Gauge")
    monitor.setCursorPos(1, 2)
    monitor.write("--------------------")

    -- Fuel % Text
    monitor.setCursorPos(1, 4)
    monitor.write("Fuel: " .. string.format("%3d", percentage) .. "%")

    -- Draw bar outline
    monitor.setCursorPos(1, 5)
    monitor.write("[")
    monitor.setCursorPos(barWidth + 2, 5)
    monitor.write("]")

    -- Filled portion
    monitor.setCursorPos(2, 5)
    if percentage >= 50 then
        monitor.setBackgroundColor(colors.green)
    elseif percentage >= 20 then
        monitor.setBackgroundColor(colors.orange)
    else
        monitor.setBackgroundColor(colors.red)
    end
    monitor.write(string.rep(" ", math.floor((percentage / 100) * barWidth)))

    -- Empty portion
    monitor.setBackgroundColor(colors.gray)
    monitor.write(string.rep(" ", barWidth - math.floor((percentage / 100) * barWidth)))

    -- Reset colors
    monitor.setBackgroundColor(colors.black)
end

-- Main loop
while true do
    tank = peripheral.wrap(tankPeripheral)  -- Re-wrap in case of reloads

    local fuelLevel = 0
    if not tank then
        monitor.clear()
        monitor.setCursorPos(1, 1)
        monitor.write("Tank not found on " .. tankPeripheral)
    else
        -- Read fuel value using available methods
        if tank.getFuelLevel then
            fuelLevel = tank.getFuelLevel()
        elseif tank.getLine then
            fuelLevel = tonumber(tank.getLine(1)) or 0
        elseif tank.getText then
            fuelLevel = tonumber(tank.getText()) or 0
        elseif tank.readAll then
            fuelLevel = tonumber(tank.readAll()) or 0
        end

        -- Clamp to 0â€“100 and draw
        fuelLevel = math.max(0, math.min(100, fuelLevel))
        drawFuelBar(fuelLevel)
    end

    sleep(updateInterval)
end
