-- Wireless Receiver to control animatedspeedometer.lua properly

local modem = peripheral.wrap("right") -- or correct side!
local channel = 1

if not modem then
    print("No modem found!")
    return
end

modem.open(channel)

local speedometerRunning = false

-- Listen for wireless button presses
local function receiverLoop()
    print("Receiver started. Waiting for wireless button...")

    while true do
        local event, side, senderChannel, replyChannel, message, distance = os.pullEvent("modem_message")

        if senderChannel == channel and message == "button_pressed" then
            if not speedometerRunning then
                print("Starting Speedometer...")
                os.queueEvent("start_speedometer")
            else
                print("Stopping Speedometer...")
                os.queueEvent("shutdown_speedometer")
            end
        end
    end
end

-- Manage starting/stopping the speedometer
local function managerLoop()
    while true do
        local event = os.pullEvent()

        if event == "start_speedometer" and not speedometerRunning then
            speedometerRunning = true
            print("Running animatedspeedometer.lua")
            
            -- Run animatedspeedometer.lua as its own task
            parallel.waitForAny(function()
                shell.run("animatedspeedometer.lua")
                speedometerRunning = false
                print("Speedometer exited cleanly.")
            end)
        
        elseif event == "shutdown_speedometer" and speedometerRunning then
            print("Sending shutdown event to speedometer...")
            os.queueEvent("shutdown_speedometer")
        end
    end
end

-- Run both loops at the same time
parallel.waitForAny(receiverLoop, managerLoop)
