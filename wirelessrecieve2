local modem = peripheral.wrap("right")
local channel = 1
if not modem then
    print("No modem found!")
    return
end
modem.open(channel)
local speedometerRunning = false
local speedometerActive = false
local speedometerPID = nil

-- Listen for wireless button
local function runReceiver()
    while true do
        local event, side, senderChannel, replyChannel, message, distance = os.pullEvent("modem_message")
        if senderChannel == channel and message == "button_pressed" then
            os.queueEvent("toggle_speedometer")
        end
    end
end

-- Manage toggling speedometer state
local function manageSpeedometer()
    while true do
        local event = os.pullEvent("toggle_speedometer")
        speedometerRunning = not speedometerRunning
        
        if speedometerRunning and not speedometerActive then
            -- Start speedometer in parallel
            speedometerActive = true
            speedometerPID = shell.openTab("animatedspeedometer.lua")
        elseif not speedometerRunning and speedometerActive then
            -- Terminate the speedometer program
            if speedometerPID then
                multishell.terminate(speedometerPID)
                speedometerPID = nil
            end
            speedometerActive = false
        end
    end
end

-- Monitor tab status
local function monitorTabs()
    while true do
        sleep(1)
        -- Check if our speedometer tab was manually closed
        if speedometerActive and speedometerPID and not multishell.getTitle(speedometerPID) then
            speedometerActive = false
            speedometerPID = nil
            speedometerRunning = false
        end
    end
end

parallel.waitForAny(runReceiver, manageSpeedometer, monitorTabs)
