local modem = peripheral.wrap("right")
local channel = 1
if not modem then
    print("No modem found!")
    return
end
modem.open(channel)
local speedometerRunning = false
local speedometerActive = false

-- Create a shared file to communicate with animatedspeedometer.lua
local function writeControlFile(state)
    local file = fs.open("speedometer_control", "w")
    file.write(state)
    file.close()
end

-- Initialize control file
writeControlFile("run")

-- Listen for wireless button
local function runReceiver()
    while true do
        local event, side, senderChannel, replyChannel, message, distance = os.pullEvent("modem_message")
        if senderChannel == channel and message == "button_pressed" then
            os.queueEvent("toggle_speedometer")
        end
    end
end

-- Manage toggling speedometer state
local function manageSpeedometer()
    while true do
        local event = os.pullEvent("toggle_speedometer")
        speedometerRunning = not speedometerRunning
        
        if speedometerRunning and not speedometerActive then
            -- Mark as active and launch the speedometer
            speedometerActive = true
            -- Signal the speedometer to run
            writeControlFile("run")
            -- Launch the speedometer in a separate process
            shell.run("bg", "animatedspeedometer.lua")
        elseif not speedometerRunning and speedometerActive then
            -- Signal the speedometer to stop
            writeControlFile("stop")
            speedometerActive = false
        end
    end
end

parallel.waitForAny(runReceiver, manageSpeedometer)
