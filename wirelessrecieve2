-- Speedometer wireless receiver with real parallel control

local modem = peripheral.wrap("right") -- or correct side
local channel = 1

if not modem then
    print("No modem found!")
    return
end

modem.open(channel)

local speedometerRunning = false

local function runReceiver()
    print("Receiver started. Waiting for wireless signals...")

    while true do
        local event, side, senderChannel, replyChannel, message, distance = os.pullEvent("modem_message")

        if senderChannel == channel and message == "button_pressed" then
            if not speedometerRunning then
                print("Starting Speedometer...")
                os.queueEvent("start_speedometer")
            else
                print("Stopping Speedometer...")
                os.queueEvent("shutdown_speedometer")
            end
        end
    end
end

local function runSpeedometerManager()
    while true do
        local event = os.pullEvent()

        if event == "start_speedometer" and not speedometerRunning then
            speedometerRunning = true
            shell.run("animatedspeedometer.lua")
            -- When animatedspeedometer.lua exits:
            speedometerRunning = false
            print("Speedometer exited.")
        elseif event == "shutdown_speedometer" and speedometerRunning then
            os.queueEvent("shutdown_speedometer") -- send shutdown event inside speedometer
            -- speedometer.lua will break and shell.run will finish
        end
    end
end

-- Now run both in parallel!
parallel.waitForAny(runReceiver, runSpeedometerManager)
